{
  "name": "jupiter-ai",
  "version": "1.0.0",
  "description": "Jupiter AI - Revolutionary single Intelligent Agent with dynamic capabilities for advanced code generation and assistance",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "scripts": {
    "build": "node build.js",
    "start": "node dist/api/server.js",
    "dev": "ts-node-dev --respawn --transpile-only src/api/server.ts",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest --selectProjects unit",
    "test:integration": "jest --selectProjects integration",
    "test:e2e": "jest --selectProjects e2e",
    "test:frontend": "jest --selectProjects frontend-workflow",
    "test:react": "jest tests/frontend-workflow/react-generation.test.ts",
    "test:deployment": "jest tests/integration/azure-deployment.test.ts",
    "test:workflow": "jest tests/e2e/react-workflow-e2e.test.ts",
    "test:performance": "jest tests/e2e/performance.test.ts --runInBand",
    "test:all-suites": "jest --coverage --verbose",
    "test:comprehensive": "ts-node test/comprehensive-test.ts",
    "lint": "eslint src --ext .ts",
    "lint:fix": "eslint src --ext .ts --fix",
    "typecheck": "tsc --noEmit",
    "clean": "rimraf dist",
    "prebuild": "npm run clean",
    "prepare": "npm run build",
    "test:all": "ts-node test/comprehensive-test.ts all",
    "test:interactive": "ts-node test/comprehensive-test.ts interactive",
    "setup:azure": "powershell -ExecutionPolicy Bypass -File scripts/setup-azure-credentials.ps1",
    "setup:azure:bash": "bash scripts/setup-azure-credentials.sh",
    "validate:azure": "ts-node scripts/validate-azure-credentials.ts",
    "test:real:azure": "ts-node scripts/test-real-azure.ts",
    "test:real:integration": "jest tests/integration/real-azure-operations.test.ts --testTimeout=180000",
    "test:real:git": "ts-node scripts/test-real-git-aci.ts",
    "test:real:git:jest": "jest tests/integration/real-git-operations-aci.test.ts --testTimeout=180000",
    "test:real:all": "npm run test:real:azure && npm run test:real:integration && npm run test:real:git",
    "test:complete-workflow": "ts-node scripts/test-complete-workflow.ts",
    "test:azure:comprehensive": "ts-node tests/run-azure-tests.ts",
    "test:azure:deployment": "jest tests/integration/real-azure-deployment-comprehensive.test.ts --testTimeout=300000 --forceExit",
    "setup:dns": "ts-node scripts/setup-godaddy-dns.ts",
    "dns:helper": "ts-node scripts/dns-helper.ts",
    "example:aci-dns": "ts-node examples/aci-with-custom-domain.ts",
    "deploy:digisquares": "ts-node examples/deploy-to-digisquares.ts",
    "deploy:dns-fallback": "ts-node examples/deploy-with-dns-fallback.ts",
    "setup:azure-dns": "ts-node scripts/setup-azure-dns.ts",
    "test:azure-dns": "ts-node scripts/test-azure-dns.ts",
    "deploy:azure-dns-in": "ts-node examples/deploy-azure-dns-in.ts",
    "deploy:unified": "ts-node examples/unified-domain-deployment.ts",
    "deploy:static-web-app": "ts-node examples/deploy-static-web-app.ts",
    "dns:test-propagation": "ts-node scripts/test-dns-propagation.ts",
    "dns:analytics": "ts-node scripts/dns-analytics.ts",
    "setup:domain-tables": "ts-node src/scripts/setup-domain-tables.ts",
    "domain:configure": "ts-node examples/domain-configuration-example.ts",
    "deploy:enhanced": "ts-node examples/enhanced-domain-deployment.ts",
    "ssl:status": "ts-node scripts/check-ssl-status.ts",
    "db:update-domain": "ts-node scripts/apply-domain-updates.ts",
    "domain:test-fixed": "ts-node examples/test-fixed-domain-service.ts",
    "db:jupiterdb-update": "ts-node scripts/jupiterdb-final-updates.ts",
    "db:jupiterdb-safe-update": "ts-node scripts/jupiterdb-safe-updates.ts",
    "db:jupiterdb-procedures": "ts-node scripts/jupiterdb-procedures.ts",
    "db:verify": "ts-node scripts/verify-domain-system.ts"
  },
  "keywords": [
    "ai",
    "agent",
    "code-generation",
    "intelligent-system",
    "dynamic-capabilities"
  ],
  "author": "Intelligent Agent System",
  "license": "MIT",
  "dependencies": {
    "@azure/arm-appservice": "^17.0.0",
    "@azure/arm-containerinstance": "^9.1.0",
    "@azure/arm-containerregistry": "^10.1.0",
    "@azure/arm-dns": "^5.1.0",
    "@azure/identity": "^4.11.0",
    "@azure/storage-blob": "^12.28.0",
    "@octokit/auth-token": "^6.0.0",
    "@octokit/rest": "^22.0.0",
    "@types/fs-extra": "^11.0.4",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/mime-types": "^3.0.1",
    "@types/socket.io": "^3.0.1",
    "@types/socket.io-client": "^1.4.36",
    "@types/uuid": "^9.0.7",
    "archiver": "^6.0.1",
    "axios": "^1.11.0",
    "body-parser": "^2.2.0",
    "chalk": "^5.3.0",
    "commander": "^11.1.0",
    "cors": "^2.8.5",
    "diff": "^5.1.0",
    "dotenv": "^16.3.1",
    "eventemitter3": "^5.0.1",
    "express": "^4.21.2",
    "form-data": "^4.0.0",
    "fs-extra": "^11.3.1",
    "glob": "^10.3.10",
    "helmet": "^7.2.0",
    "jsonwebtoken": "^9.0.2",
    "lru-cache": "^10.1.0",
    "mime-types": "^3.0.1",
    "minimatch": "^9.0.3",
    "mysql2": "^3.14.3",
    "ora": "^7.0.1",
    "p-queue": "^7.4.1",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "turndown": "^7.1.2",
    "uuid": "^9.0.1",
    "winston": "^3.11.0",
    "ws": "^8.16.0",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@types/archiver": "^6.0.3",
    "@types/body-parser": "^1.19.6",
    "@types/cors": "^2.8.19",
    "@types/diff": "^7.0.2",
    "@types/express": "^4.17.23",
    "@types/helmet": "^0.0.48",
    "@types/jest": "^29.5.11",
    "@types/node": "^20.19.9",
    "@types/turndown": "^5.0.5",
    "@types/ws": "^8.18.1",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "eslint": "^8.56.0",
    "jest": "^29.7.0",
    "rimraf": "^5.0.5",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.2",
    "ts-node-dev": "^2.0.0",
    "typescript": "^5.3.3"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
