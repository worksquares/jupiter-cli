version: '3.8'

services:
  jupiter-agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jupiter-agent-dev
    environment:
      - NODE_ENV=development
      - AI_PROVIDER=cosmos
      - AI_BASE_URL=https://cosmosapi.digisquares.com
      - JWT_SECRET=${JWT_SECRET:-jupiter-secret-key}
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://jupiter:jupiter@postgres:5432/jupiter_dev
      - WEBSOCKET_PORT=3001
    ports:
      - "3000:3000"     # Development server
      - "8080:8080"     # API server
      - "3001:3001"     # WebSocket server
      - "9229:9229"     # Node.js debugger
    volumes:
      - ./workspace:/workspace
      - ./src:/agent/src
      - ./logs:/var/log/jupiter
    depends_on:
      - redis
      - postgres
    networks:
      - jupiter-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: jupiter-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - jupiter-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: jupiter-postgres
    environment:
      - POSTGRES_USER=jupiter
      - POSTGRES_PASSWORD=jupiter
      - POSTGRES_DB=jupiter_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - jupiter-network
    restart: unless-stopped

  # Optional: Adminer for database management
  adminer:
    image: adminer:latest
    container_name: jupiter-adminer
    ports:
      - "8081:8080"
    networks:
      - jupiter-network
    depends_on:
      - postgres
    restart: unless-stopped

  # Optional: Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: jupiter-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8082:8081"
    networks:
      - jupiter-network
    depends_on:
      - redis
    restart: unless-stopped

networks:
  jupiter-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
